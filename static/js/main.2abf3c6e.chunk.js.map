{"version":3,"sources":["App.js","index.js"],"names":["Web3","require","web3","givenProvider","WrapperStyled","styled","div","ButtonStyleed","button","ButtonBuyStyled","App","useState","isBuy","setIsBuy","totalSupply","setTotalSupply","badieSupply","setBadieSupply","dateSale","setDateSale","loading","setLoading","setMessage","useEffect","window","addEventListener","a","ethereum","enable","then","eth","getAccounts","account","console","log","actionSmartConstract","e","currentProvider","alert","senderAddress","ABIERC721","ercConstract","Contract","process","methods","getPrice","call","from","saleActive","tokenURI","tokenId","tokenByIndex","tokenIndex","d1","Date","d2","getTime","onBuyToken","mintBadie","send","catch","error","buyToken","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2abf3c6e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ABIERC721 from \"./untils/abiToken.json\";\nconst Web3 = require(\"web3\");\nlet web3 = new Web3(\n  Web3.givenProvider ||\n    \"https://rinkeby.infura.io/v3/1c37394c71d748369948038cfbc3e79\"\n);\nconst dateSaleEnd = 1628045829534 + 30 * 3600 * 24 * 1000;\nfunction App() {\n  const [isBuy, setIsBuy] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [badieSupply, setBadieSupply] = useState(0);\n  const [dateSale, setDateSale] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    window.addEventListener(\"load\", async () => {\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n        try {\n          window.ethereum.enable().then(async function async() {\n            const account = await web3.eth.getAccounts();\n            console.log(\"account\", account);\n            actionSmartConstract(account[0]);\n          });\n        } catch (e) {\n          // User has denied account access to DApp...\n        }\n      }\n      // Legacy DApp Browsers\n      else if (window.web3) {\n        web3 = new Web3(window.web3.currentProvider);\n        console.log(\"web3\", web3);\n      }\n      // Non-DApp Browsers\n      else {\n        alert(\"You have to install MetaMask !\");\n      }\n    });\n  }, []);\n\n  const actionSmartConstract = async (senderAddress) => {\n    console.log(\"ABIERC721\", ABIERC721);\n    const ercConstract = new web3.eth.Contract(\n      ABIERC721,\n      \"0x6590D6f9B8120aa30C36b9DF38CAAf7cA51175Dc\"\n    );\n    console.log(\n      \"process.env.ercConstract\",\n      process.env.REACT_APP_CONSTRACT_ADDRESS\n    );\n    const price = await ercConstract.methods.getPrice().call({\n      from: senderAddress,\n    });\n    const saleActive = await ercConstract.methods.saleActive().call({\n      from: senderAddress,\n    });\n    if (saleActive === true) {\n      setIsBuy(true);\n    }\n    //badieSupply  //badieSupply\n    const totalSupply = await ercConstract.methods.totalSupply().call({\n      from: senderAddress,\n    });\n    setTotalSupply(totalSupply);\n    const badieSupply = await ercConstract.methods.totalSupply().call({\n      from: senderAddress,\n    });\n    setBadieSupply(badieSupply);\n    const tokenId = await ercConstract.methods.tokenURI(2).call({\n      from: senderAddress,\n    });\n    const tokenIndex = await ercConstract.methods.tokenByIndex(1).call({\n      from: senderAddress,\n    });\n    console.log(\"badieSupply\", badieSupply);\n    console.log(\"tokenId\", tokenId);\n    console.log(\"tokenIndex\", tokenIndex);\n    const d1 = new Date();\n    const d2 = new Date(dateSaleEnd);\n    console.log(new Date().getTime());\n    console.log(\"d1\", d1);\n    console.log(\"d2\", d2);\n    console.log(\"d1.getTime() <= d2.getTime()\", d1.getTime() <= d2.getTime());\n    if (d1.getTime() <= d2.getTime()) {\n      setDateSale(true);\n    }\n    setLoading(false);\n  };\n\n  const onBuyToken = async () => {\n    if (window.ethereum) {\n      const ercConstract = new web3.eth.Contract(\n        ABIERC721,\n        \"0x6590D6f9B8120aa30C36b9DF38CAAf7cA51175Dc\"\n      );\n      const account = await web3.eth.getAccounts();\n      console.log(\"account\", account);\n      const buyToken = await ercConstract.methods\n        .mintBadie(15)\n        .send({ from: account[0] })\n        .catch((error) => {\n          setMessage(\"\");\n        });\n      console.log(\"buyToken\", buyToken);\n    }\n  };\n\n  if (loading) {\n    return <WrapperStyled>Loading....</WrapperStyled>;\n  }\n  if (isBuy) {\n    return (\n      <WrapperStyled>\n        {totalSupply > badieSupply ? (\n          <ButtonStyleed>Sold Out</ButtonStyleed>\n        ) : (\n          <ButtonBuyStyled onClick={onBuyToken}>BUY NOW</ButtonBuyStyled>\n        )}\n      </WrapperStyled>\n    );\n  }\n  if (!isBuy) {\n    return (\n      <WrapperStyled>\n        {dateSale ? (\n          <ButtonStyleed>Sale Finished</ButtonStyleed>\n        ) : (\n          <ButtonStyleed>Sale not yet active</ButtonStyleed>\n        )}\n      </WrapperStyled>\n    );\n  }\n}\nconst WrapperStyled = styled.div`\n  width: 100%;\n  margin-top: 100px;\n  display: flex;\n  justify-content: center;\n`;\nconst ButtonStyleed = styled.button`\n  width: 200px;\n  height: 50px;\n  background: red;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  text-transform: uppercase;\n  :hover {\n    background: #333;\n  }\n`;\n\nconst ButtonBuyStyled = styled.button`\n  width: 200px;\n  height: 50px;\n  background: green;\n  color: #fff;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  text-transform: uppercase;\n  :hover {\n    background: #333;\n  }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}